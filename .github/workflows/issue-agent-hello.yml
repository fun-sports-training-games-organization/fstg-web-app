name: Issue Agent PR

on:
  issues:
    types: [labeled]

permissions:
  contents: write
  pull-requests: write

jobs:
  create-branch-and-pr:
    if: github.event.label.name == 'agent-task'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Set up branch name
        id: vars
        run: |
          # Lowercase, replace spaces with dashes, strip non-alphanum, trim trailing dashes
          # Allow configurable branch name length (default: 60)
          MAXLEN="${BRANCH_NAME_MAXLEN:-60}"
          SAFE_TITLE=$(echo "${{ github.event.issue.title }}" \
            | tr '[:upper:]' '[:lower:]' \
            | tr ' ' '-' \
            | tr -cd '[:alnum:]-' \
            | cut -c1-"$MAXLEN" \
            | sed 's/-*$//')

          # Fail if empty after sanitization
          if [ -z "$SAFE_TITLE" ]; then
            echo "Error: Issue title produced an empty branch name after sanitization."
            exit 1
          fi

          echo "BRANCH_NAME=agent/${{ github.event.issue.number }}-${SAFE_TITLE}" >> $GITHUB_ENV

      - name: Create and switch to branch
        run: |
          git checkout -b "$BRANCH_NAME"

      - name: Minimal AI code generation
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          mkdir -p agent-output
          PROMPT="You are an AI coding assistant. Based on the following GitHub issue, create a short text file summarizing the task:\n\nTitle: ${{ github.event.issue.title }}\n\nBody: ${{ github.event.issue.body }}"
          RESPONSE=$(curl https://api.openai.com/v1/chat/completions \
            -s \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d '{
              "model": "gpt-5",
              "messages": [{"role": "user", "content": "'"$PROMPT"'"}],
              "max_tokens": 200
            }' | jq -r '.choices[0].message.content')

          # Use branch name in the file name
          FILE_NAME="agent-output/${BRANCH_NAME}.txt"
          echo "$RESPONSE" > "$FILE_NAME"

          git add "$FILE_NAME"
          git commit -m "chore: AI-generated summary for #${{ github.event.issue.number }}"

      - name: Push branch
        run: |
          git push origin "$BRANCH_NAME"

      - name: Open Pull Request
        run: |
          gh pr create \
            --title "Auto PR: ${{ github.event.issue.title }}" \
            --body "This PR was automatically generated for issue #${{ github.event.issue.number }}." \
            --base main \
            --head "$BRANCH_NAME"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
